@page "/currentcards"
@attribute [Authorize(AccountancyPermissions.Current.Default)]

@inherits BaseListPage<SelectCurrentDto,ListCurrentDto,CurrentListParameterDto,
                       CreateCurrentDto,UpdateCurrentDto,CodeParameterDto>

@inject CurrentAppService CrudService
@inject CurrentService Service
@inject CurrentMoventService CurrentMoventService

<DevListPageLayout DataGridService="Service"
                   ListPageService="Service"
                   Caption="@L["CurrentCards"]"
                   RowHeights="@RowHeights("*")">

    <ListPageContext>
        <DevDataGrid DataGridService="Service"
                     DoubleClick="async () => await BeforeUpdateAsync()"
                     HorizontalScrollBarMode="ScrollBarMode.Visible">
            <HeaderTemplate>
                <DevListPageToolBar CommonService="Service"
                                    DataGridService="Service"
                                    ListPageService="Service"
                                    DeleteButtonClick="async ()=> await DeleteAsync()"
                                    DeleteButtonEnabled="Service.ListDataSource.Count > 0"
                                    DeleteButtonVisible="true"
                                    FilterButtonVisible="true"
                                    GetListDataSource="async()=> await GetListDataSourceAsync()"
                                    GroupButtonVisible="true"
                                    L="L"
                                    NewButtonClick="async ()=> await BeforeInsertAsync()"
                                    NewButtonVisible="true"
                                    UpdateButtonClick="async ()=> await BeforeUpdateAsync()"
                                    UpdateButtonEnabled="Service.ListDataSource.Count > 0"
                                    UpdateButtonVisible="true"
                                    ReserveButtonBeginGroup="true"
                                    ReserveButtonClick="()=>CurrentMoventService.BeforeShowPopupListPage(Service.SelectedItem.Id)"
                                    ReserveButtonEnabled="Service.ListDataSource.Count > 0"
                                    ReserveButtonText="@L["CardTransactions"]"
                                    ReserveButtonTooltip="@L["ShowTransactionsForThisCard"]"
                                    ReserveButtonVisible="true">

                </DevListPageToolBar>
            </HeaderTemplate>
            <Columns>
                <DxDataGridColumn Caption="@L["Code"]"
                                  Field="@nameof(ListCurrentDto.Code)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["Name"]"
                                  Field="@nameof(ListCurrentDto.Name)"
                                  Width="150px" />
                <DxDataGridSpinEditColumn Caption="@L["Debt"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListCurrentDto.Debt)"
                                          Width="110px" />
                <DxDataGridSpinEditColumn Caption="@L["Receivable"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListCurrentDto.Receivable)"
                                          Width="110px" />
                <DxDataGridSpinEditColumn Caption="@L["DebtBalance"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListCurrentDto.DebtBalance)"
                                          Width="110px" />
                <DxDataGridSpinEditColumn Caption="@L["BalanceReceivable"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListCurrentDto.BalanceReceivable)"
                                          Width="110px" />
                <DxDataGridColumn Caption="@L["TaxDepartment"]"
                                  Field="@nameof(ListCurrentDto.TaxDepartment)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["TaxNumber"]"
                                  Field="@nameof(ListCurrentDto.TaxNumber)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["Telephone"]"
                                  Field="@nameof(ListCurrentDto.Telephone)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["Address"]"
                                  Field="@nameof(ListCurrentDto.Address)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["SpecialCodeOneName"]"
                                  Field="@nameof(ListCurrentDto.SpecialCodeOneName)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["SpecialCodeTwoName"]"
                                  Field="@nameof(ListCurrentDto.SpecialCodeTwoName)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["Description"]"
                                  Field="@nameof(ListCurrentDto.Description)"
                                  Width="*" />
            </Columns>
        </DevDataGrid>
    </ListPageContext>
    <EditPageContent>
        <CurrentEditPage OnSubmit="OnSubmit" />
    </EditPageContent>

</DevListPageLayout>

@if (CurrentMoventService.IsPopupListPage)
{
    Service.SelectFirstDataRow = false;
    <DevPopupListPageLayout DataGridService="Service"
                        CancelButtonText="@L["Close"]"
                        Caption="@($"{L["CurrentCardTransactions"]} ({Service.SelectedItem.Code} / {Service.SelectedItem.Name})")"
                        Closed="CurrentMoventService.HideListPage"
                        SelectButtonVisible="false"
                        Visible="true"
                        Width="1100px">
        <ListPageContent>
            <CurrentMoventListPage />
        </ListPageContent>
    </DevPopupListPageLayout>
}

@code {
    protected override void OnInitialized()
    {
        BaseCrudAppService = CrudService;
        BaseService = Service;
    }
}