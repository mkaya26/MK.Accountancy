@page "/stockcards"
@attribute [Authorize(AccountancyPermissions.Stock.Default)]

@inherits BaseListPage<SelectStockDto,ListStockDto,StockListParameterDto,
                       CreateStockDto,UpdateStockDto,CodeParameterDto>

@inject StockAppService CrudService
@inject StockService Service
@inject UnitService UnitService
@inject StockMoventService StockMoventService

<DevListPageLayout DataGridService="Service"
                   ListPageService="Service"
                   Caption="@L["StockCards"]"
                   RowHeights="@RowHeights("*")">

    <ListPageContext>
        <DevDataGrid DataGridService="Service"
                     DoubleClick="async () => await BeforeUpdateAsync()">
            <HeaderTemplate>
                <DevListPageToolBar CommonService="Service"
                                    DataGridService="Service"
                                    ListPageService="Service"
                                    DeleteButtonClick="async ()=> await DeleteAsync()"
                                    DeleteButtonEnabled="Service.ListDataSource.Count > 0"
                                    DeleteButtonVisible="true"
                                    FilterButtonVisible="true"
                                    GetListDataSource="async()=> await GetListDataSourceAsync()"
                                    GroupButtonVisible="true"
                                    L="L"
                                    NewButtonClick="async ()=> await BeforeInsertAsync()"
                                    NewButtonVisible="true"
                                    UpdateButtonClick="async ()=> await BeforeUpdateAsync()"
                                    UpdateButtonEnabled="Service.ListDataSource.Count > 0"
                                    UpdateButtonVisible="true"
                                    ReserveButtonBeginGroup="true"
                                    ReserveButtonClick="()=>StockMoventService.BeforeShowPopupListPage(InvoiceDetailType.Stock,Service.SelectedItem.Id)"
                                    ReserveButtonEnabled="Service.ListDataSource.Count > 0"
                                    ReserveButtonText="@L["CardTransactions"]"
                                    ReserveButtonTooltip="@L["ShowTransactionsForThisCard"]"
                                    ReserveButtonVisible="true">

                </DevListPageToolBar>
            </HeaderTemplate>
            <Columns>
                <DxDataGridColumn Caption="@L["Code"]"
                                  Field="@nameof(ListStockDto.Code)"
                                  Width="150px"
                                  FixedStyle="DataGridFixedStyle.Left" />
                <DxDataGridColumn Caption="@L["Name"]"
                                  Field="@nameof(ListStockDto.Name)"
                                  Width="250px"
                                  FixedStyle="DataGridFixedStyle.Left" />
                <DxDataGridColumn Caption="@L["Unit"]"
                                  Field="@nameof(ListStockDto.UnitName)"
                                  Width="150px" />
                <DxDataGridSpinEditColumn Caption="@L["UnitPrice"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListStockDto.UnitPrice)"
                                          Width="110px">
                </DxDataGridSpinEditColumn>
                <DxDataGridSpinEditColumn Caption="@L["TaxRate"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListStockDto.TaxRate)"
                                          Width="110px">
                </DxDataGridSpinEditColumn>
                <DxDataGridSpinEditColumn Caption="@L["Entered"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListStockDto.InStock)"
                                          Width="110px">
                </DxDataGridSpinEditColumn>
                <DxDataGridSpinEditColumn Caption="@L["Out"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListStockDto.OutStock)"
                                          Width="110px">
                </DxDataGridSpinEditColumn>
                <DxDataGridSpinEditColumn Caption="@L["Balance"]"
                                          DisplayFormat="n2"
                                          Field="@nameof(ListStockDto.Balance)"
                                          Width="110px">
                </DxDataGridSpinEditColumn>
                <DxDataGridColumn Caption="@L["SpecialCodeOneName"]"
                                  Field="@nameof(ListStockDto.SpecialCodeOneName)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["SpecialCodeTwoName"]"
                                  Field="@nameof(ListStockDto.SpecialCodeTwoName)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["Description"]"
                                  Field="@nameof(ListStockDto.Description)"
                                  Width="*" />
            </Columns>
        </DevDataGrid>
    </ListPageContext>
    <EditPageContent>
        <StockEditPage OnSubmit="OnSubmit" />
    </EditPageContent>

</DevListPageLayout>

@if (StockMoventService.IsPopupListPage)
{
    Service.SelectFirstDataRow = false;
    <DevPopupListPageLayout DataGridService="Service"
                        CancelButtonText="@L["Close"]"
                        Caption="@($"{L["StockTransactions"]} ({Service.SelectedItem.Code} / {Service.SelectedItem.Name})")"
                        Closed="StockMoventService.HideListPage"
                        SelectButtonVisible="false"
                        Visible="true"
                        Width="1100px">
        <ListPageContent>
            <StockMoventListPage />
        </ListPageContent>
    </DevPopupListPageLayout>
}

@code {
    protected override void OnInitialized()
    {
        BaseCrudAppService = CrudService;
        BaseService = Service;
        //
        DefaultPolicy = AccountancyPermissions.Stock.Default;
        CreatePolicy = AccountancyPermissions.Stock.Create;
        UpdatePolicy = AccountancyPermissions.Stock.Update;
        DeletePolicy = AccountancyPermissions.Stock.Delete;
        ReservePolicy = AccountancyPermissions.Stock.Transaction;
    }
}