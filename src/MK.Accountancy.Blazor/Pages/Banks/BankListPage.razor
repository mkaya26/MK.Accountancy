@page "/bankcards"

@inherits BaseListPage<SelectBankDto,BankListDto,BankListParameterDto,
                       CreateBankDto,UpdateBankDto,CodeParameterDto>

@inject BankAppService CrudService
@inject BankService Service
@inject BankDepartmentService BankDepartentService

<DevListPageLayout DataGridService="Service"
                   ListPageService="Service"
                   Caption="@L["BankCards"]"
                   RowHeights="@RowHeights("*")">

    <ListPageContext>
        <DevDataGrid DataGridService="Service"
                     DoubleClick="async () => await BeforeUpdateAsync()">
            <HeaderTemplate>
                <DevListPageToolBar CommonService="Service"
                                    DataGridService="Service"
                                    ListPageService="Service"
                                    DeleteButtonClick="async ()=> await DeleteAsync()"
                                    DeleteButtonEnabled="Service.ListDataSource.Count > 0"
                                    DeleteButtonVisible="true"
                                    FilterButtonVisible="true"
                                    GetListDataSource="async()=> await GetListDataSourceAsync()"
                                    GroupButtonVisible="true"
                                    L="L"
                                    NewButtonClick="async ()=> await BeforeInsertAsync()"
                                    NewButtonVisible="true"
                                    ReserveButtonVisible="true"
                                    ReserveButtonText="@L["DepartmentCards"]"
                                    ReserveButtonTooltip="@L["BankDepartmentCardsTable"]"
                                    ReserveButtonClick="@( () => BankDepartentService.BeforeShowPopupListPage(Service.SelectedItem.Id))"
                                    ReserveButtonEnabled="Service.ListDataSource.Count > 0"
                                    UpdateButtonClick="async ()=> await BeforeUpdateAsync()"
                                    UpdateButtonEnabled="Service.ListDataSource.Count > 0"
                                    UpdateButtonVisible="true">

                </DevListPageToolBar>
            </HeaderTemplate>
            <Columns>
                <DxDataGridColumn Caption="@L["Code"]"
                                  Field="@nameof(ListUnitDto.Code)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["Name"]"
                                  Field="@nameof(ListUnitDto.Name)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["SpecialCodeOneName"]"
                                  Field="@nameof(ListUnitDto.SpecialCodeOneName)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["SpecialCodeTwoName"]"
                                  Field="@nameof(ListUnitDto.SpecialCodeTwoName)"
                                  Width="150px" />
                <DxDataGridColumn Caption="@L["Description"]"
                                  Field="@nameof(ListUnitDto.Description)"
                                  Width="*" />
            </Columns>
        </DevDataGrid>
    </ListPageContext>
    <EditPageContent>
        <BankEditPage OnSubmit="OnSubmit" />
    </EditPageContent>

</DevListPageLayout>

@if (BankDepartentService.IsPopupListPage)
{
    Service.SelectFirstDataRow = false;
    <DevPopupListPageLayout DataGridService="BankDepartentService"
                        CancelButtonText="@L["Close"]"
                        Caption="@($"{Service.SelectedItem.Name} {L["BankDepartmentCards"]}")"
                        Closed="BankDepartentService.HideListPage"
                        SelectButtonVisible=false
                        Visible="true"
                        Width="1100px">
        <ListPageContent>
            <BankDepartmentListPage />
        </ListPageContent>
    </DevPopupListPageLayout>
}

@code {
    protected override void OnInitialized()
    {
        BaseCrudAppService = CrudService;
        BaseService = Service;
    }
}
