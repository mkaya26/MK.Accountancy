@using Volo.Abp.Identity;
@using Volo.Abp.TenantManagement;
@inject IStringLocalizer<AccountancyResource> L
@inject AppService AppService
@inject NavigationManager NavigationManager
@inject IAuthorizationService AuthorizationService

<div class="card w-100 text-white bg-dark">
    <div class="accordion-body p-0">
        <DxMenu Title="@($"MK {L["Pre-Accounting"]}")"
                ItemsPosition="ItemPosition.Start"
                CollapseItemsToHamburgerMenu="true">

            <Items>
                <AuthorizeView Context="AuthorizeContext">
                    <Authorized>
                        <DxMenuItem Text="@L["Home"]"
                                    NavigateUrl="/"
                                    IconCssClass="fa fa-home"
                                    BeginGroup="true" />
                        <DxMenuItem Text="@L["Cards"]"
                                    IconCssClass="fa fa-clone">
                            <Items>
                                @if (_unit)
                                {
                                    <DxMenuItem Text="@L["UnitCards"]"
                                                NavigateUrl="unitcards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_bank)
                                {
                                    <DxMenuItem Text="@L["BankCards"]"
                                                NavigateUrl="bankcards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_bankAccount)
                                {
                                    <DxMenuItem Text="@L["BankAccountCards"]"
                                                NavigateUrl="bankaccountcards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_current)
                                {
                                    <DxMenuItem Text="@L["CustomerCards"]"
                                                NavigateUrl="currentcards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_safe)
                                {
                                    <DxMenuItem Text="@L["CashCards"]"
                                                NavigateUrl="cashcards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_store)
                                {
                                    <DxMenuItem Text="@L["WarehouseCards"]"
                                                NavigateUrl="storecards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_stock)
                                {
                                    <DxMenuItem Text="@L["StockCards"]"
                                                NavigateUrl="stockcards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_service)
                                {
                                    <DxMenuItem Text="@L["ServiceCards"]"
                                                NavigateUrl="servicecards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_expence)
                                {
                                    <DxMenuItem Text="@L["ExpenseCards"]"
                                                NavigateUrl="expensecards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_department)
                                {
                                    <DxMenuItem Text="@L["BranchCards"]"
                                                NavigateUrl="departmentcards"
                                                IconCssClass="fa fa-clone" />
                                }
                                @if (_term)
                                {
                                    <DxMenuItem Text="@L["PeriodCards"]"
                                                NavigateUrl="termcards"
                                                IconCssClass="fa fa-clone" />
                                }
                            </Items>
                        </DxMenuItem>
                        @if (_invoice)
                        {
                            <DxMenuItem Text="@L["Invoices"]"
                            IconCssClass="fas fa-file-invoice">
                                <Items>
                                    <DxMenuItem Text="@L["PurchaseInvoices"]"
                                    NavigateUrl="purchaseinvoicecards"
                                    IconCssClass="fas fa-file-invoice" />

                                    <DxMenuItem Text="@L["SalesInvoices"]"
                                    NavigateUrl="salesinvoicecards"
                                    IconCssClass="fas fa-file-invoice" />
                                </Items>
                            </DxMenuItem>
                        }
                        @if (_receipt)
                        {
                            <DxMenuItem Text="@L["Receipts"]"
                            IconCssClass="fas fa-receipt">
                                <Items>
                                    <DxMenuItem Text="@L["CollectionReceipts"]"
                                    NavigateUrl="collectionreceiptcards"
                                    IconCssClass="fas fa-receipt" />

                                    <DxMenuItem Text="@L["PaymentReceipts"]"
                                    NavigateUrl="paymentreceiptcards"
                                    IconCssClass="fas fa-receipt" />

                                    <DxMenuItem Text="@L["CashTransactionReceipts"]"
                                    NavigateUrl="cashtransactionreceiptcards"
                                    IconCssClass="fas fa-receipt" />

                                    <DxMenuItem Text="@L["BankTransactionReceipts"]"
                                    NavigateUrl="banktransactionreceiptcards"
                                    IconCssClass="fas fa-receipt" />
                                </Items>
                            </DxMenuItem>
                        }
                        @if (_paymentDocument)
                        {
                            <DxMenuItem Text="@L["MeansOfPayment"]"
                            IconCssClass="fa fa-money-check">
                                <Items>
                                    <DxMenuItem Text="@L["MeansOfPayment"]"
                                    NavigateUrl="meansofpayment"
                                    IconCssClass="fa fa-money-check" />

                                    @*                                <DxMenuItem Text="@L["ReceiveMeansOfPayment"]"
                                            NavigateUrl="receivemeansofpayment"
                                            IconCssClass="fa fa-money-check" />

                                <DxMenuItem Text="@L["OurOwnMeansOfPayment"]"
                                            NavigateUrl="ourownmeansofpayment"
                                            IconCssClass="fa fa-money-check" />*@
                                </Items>
                            </DxMenuItem>
                        }
                        @if (_parameter)
                        {
                            <DxMenuItem Text="@L["Parameters"]"
                            IconCssClass="fas fa-clipboard-check">
                                <Items>
                                    <DxMenuItem Text="@L["CompParameters"]"
                                    Click="()=> AppService.ShowOrganizationParameterEditPage = true"
                                    IconCssClass="fas fa-clipboard-check" />
                                    <DxMenuItem Text="@L["Companies"]"
                                                Click="() => AppService.ShowCompanyEditPage = true"
                                                IconCssClass="fas fa-cog" />
                                </Items>
                            </DxMenuItem>
                        }
                        @if (_management)
                        {
                            <DxMenuItem Text="@L["Administration"]"
                            IconCssClass="fas fa-wrench">
                                <Items>
                                    @if (_tenant)
                                    {
                                        <DxMenuItem Text="@L["TenantManagement"]"
                                        IconCssClass="fas fa-user">
                                            <Items>
                                                <DxMenuItem Text="@L["Tenants"]"
                                                NavigateUrl="tenant-management/tenants"
                                                IconCssClass="fas fa-user" />
                                            </Items>
                                        </DxMenuItem>
                                    }
                                    @if (_user || _role)
                                    {
                                        <DxMenuItem Text="@L["IdentityManagement"]"
                                        IconCssClass="fas fa-user-lock">
                                            <Items>
                                                @if (_role)
                                                {
                                                    <DxMenuItem Text="@L["Roles"]"
                                                    NavigateUrl="Identity/Roles"
                                                    IconCssClass="fas fa-user-lock" />
                                                }
                                                @if (_user)
                                                {
                                                    <DxMenuItem Text="@L["Users"]"
                                                    NavigateUrl="Identity/Users"
                                                    IconCssClass="fas fa-user-lock" />
                                                }
                                            </Items>
                                        </DxMenuItem>
                                    }
                                    @if (_setting)
                                    {
                                        <DxMenuItem Text="@L["Settings"]"
                                        NavigateUrl="setting-management"
                                        IconCssClass="fas fa-cog" />
                                    }
                                </Items>
                            </DxMenuItem>
                        }
                        <DxMenuItem Click="()=> AppService.ShowDepartmentTermEditPage = true"
                                    Position="ItemPosition.End"
                                    BeginGroup="true">
                            <TextTemplate>
                                <i class="far fa-building pe-2" />
                                @(((SelectOrganizationParameterDto)AppService.CompanyParameter).DepartmentName)
                                <i class="fas fa-calendar-alt pe-2" />
                                @(((SelectOrganizationParameterDto)AppService.CompanyParameter).TermName)
                            </TextTemplate>
                        </DxMenuItem>
                    </Authorized>
                </AuthorizeView>
                <LoginDisplayMenu />
            </Items>
        </DxMenu>
    </div>
</div>

@if (AppService.ShowOrganizationParameterEditPage)
{
    <OrganizationParameterEditPage />
}

@if (AppService.ShowDepartmentTermEditPage)
{
    <DepartmentTermSelectEditPage />
}

@if (AppService.ShowCompanyEditPage)
{
    <CompanyEditPage />
}

@code {

    protected override void OnInitialized()
    {
        var url = NavigationManager.Uri.RemovePreFix(NavigationManager.BaseUri).EnsureStartsWith('/');
        if (url != "/")
        {
            NavigationManager.NavigateTo("/", true);
        }
        AppService.HasChanged = StateHasChanged;
    }

    bool _unit, _bank, _bankAccount, _current, _safe, _store, _service, _expence,
    _department, _term, _invoice, _receipt, _paymentDocument, _management,
    _parameter, _tenant, _role, _setting, _user, _stock;

    protected override async Task OnParametersSetAsync()
    {
        _unit = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Unit.Default);
        _bank = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Bank_.Default);
        _bankAccount = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.BankAccount.Default);
        _current = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Current.Default);
        _safe = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Safe.Default);
        _store = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Store.Default);
        _service = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Service.Default);
        _expence = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Expense.Default);
        _department = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Department.Default);
        _term = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Term.Default);
        _invoice = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Invoice.Default);
        _receipt = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Receipt.Default);
        _paymentDocument = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.PaymentDocument.Default);
        _management = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Management.Default);
        _parameter = true;
        _tenant = await AuthorizationService.IsGrantedAnyAsync(TenantManagementPermissions.Tenants.Default);
        _role = await AuthorizationService.IsGrantedAnyAsync(IdentityPermissions.Roles.Default);
        _setting = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Setting.Default);
        _user = await AuthorizationService.IsGrantedAnyAsync(IdentityPermissions.Users.Default);
        _stock = await AuthorizationService.IsGrantedAnyAsync(AccountancyPermissions.Stock.Default);
    }
}
